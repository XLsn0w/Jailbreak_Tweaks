//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "GPUImageFilterGroup.h"

@class GPUImageFilter, MCBilateralSmootherFilter, MCEyeLightenFilter, MCFaceFeatureFilter, NSArray;

@interface MCPrefixCosmeticFilterGroup : GPUImageFilterGroup
{
    _Bool _enableNewSmooth;
    NSArray *_faceAnalyzers;
    double _faceFeatureAlpha;
    double _faceTeethAlpha;
    double _skinColorSlider;
    double _imageContrast;
    double _smoothOpacity;
    double _wrinkleOpacity;
    unsigned long long _option;
    GPUImageFilter *_lensFilter;
    GPUImageFilter *_lensFilter2;
    MCEyeLightenFilter *_eyeLightFilter;
    MCFaceFeatureFilter *_faceFeatureFilter;
    MCBilateralSmootherFilter *_smoothFilter;
    MCBilateralSmootherFilter *_smoothFilter2;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool enableNewSmooth; // @synthesize enableNewSmooth=_enableNewSmooth;
@property(retain, nonatomic) MCEyeLightenFilter *eyeLightFilter; // @synthesize eyeLightFilter=_eyeLightFilter;
@property(retain, nonatomic) NSArray *faceAnalyzers; // @synthesize faceAnalyzers=_faceAnalyzers;
@property(nonatomic) double faceFeatureAlpha; // @synthesize faceFeatureAlpha=_faceFeatureAlpha;
@property(retain, nonatomic) MCFaceFeatureFilter *faceFeatureFilter; // @synthesize faceFeatureFilter=_faceFeatureFilter;
@property(nonatomic) double faceTeethAlpha; // @synthesize faceTeethAlpha=_faceTeethAlpha;
@property(nonatomic) double imageContrast; // @synthesize imageContrast=_imageContrast;
- (id)init;
- (id)initWithOption:(unsigned long long)arg1;
@property(retain, nonatomic) GPUImageFilter *lensFilter; // @synthesize lensFilter=_lensFilter;
@property(retain, nonatomic) GPUImageFilter *lensFilter2; // @synthesize lensFilter2=_lensFilter2;
@property(nonatomic) unsigned long long option; // @synthesize option=_option;
@property(nonatomic) double skinColorSlider; // @synthesize skinColorSlider=_skinColorSlider;
@property(retain, nonatomic) MCBilateralSmootherFilter *smoothFilter2; // @synthesize smoothFilter2=_smoothFilter2;
@property(retain, nonatomic) MCBilateralSmootherFilter *smoothFilter; // @synthesize smoothFilter=_smoothFilter;
@property(nonatomic) double smoothOpacity; // @synthesize smoothOpacity=_smoothOpacity;
@property(nonatomic) double wrinkleOpacity; // @synthesize wrinkleOpacity=_wrinkleOpacity;
- (void)setupBorderBlurFilter:(id)arg1;
- (void)setupDefaultFeatureLipsLutImage;
- (void)setupDefaultFeatureNormalImage;
- (void)setupFeatureLipsLutImage:(id)arg1;
- (void)setupFeatureNormalImage:(id)arg1;
- (_Bool)updateFilterChain;
- (void)updateSmoothAndWrinkleOpacity;

@end

