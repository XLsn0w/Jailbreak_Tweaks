//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WCDragToCloseViewController.h"

#import "EditImageInitialViewDelegate.h"
#import "EditVideoLogicItemDelegate.h"
#import "MMAssetPickerBrowserViewDelegate.h"
#import "MMAssetSelectedCollectionViewDelegate.h"
#import "MultiImageScrollViewDelegate.h"
#import "SightLocalVideoProcessingViewControllerDelegate.h"
#import "WCActionSheetDelegate.h"

@class EditImageIntialView, EditVideoLogicItem, FavClickStreamHelper, MMAsset, MMAssetPickerSendButton, MMAssetSelectCheckButton, MMAssetSelectedCollectionView, MultiImageScrollView, NSMutableDictionary, NSString, UIActivityIndicatorView, UIButton, UILabel, UIView;

@interface MMImagePreviewBrowserController : WCDragToCloseViewController <EditVideoLogicItemDelegate, EditImageInitialViewDelegate, MMAssetPickerBrowserViewDelegate, MMAssetSelectedCollectionViewDelegate, SightLocalVideoProcessingViewControllerDelegate, MultiImageScrollViewDelegate, WCActionSheetDelegate>
{
    MultiImageScrollView *_pagingScrollView;
    UIView *oTitleBackGroundView;
    UIView *_bottomBar;
    UIButton *_originImageCheck;
    UILabel *_originImageLabel;
    UIActivityIndicatorView *_originIndictorView;
    UIButton *_editButton;
    MMAssetPickerSendButton *m_sendButton;
    MMAssetSelectedCollectionView *m_selectedCollectionView;
    MMAssetSelectCheckButton *m_selectCheckButton;
    NSMutableDictionary *m_browserViewCache;
    UILabel *m_tipInfoLabel;
    UIButton *m_cropVideoButton;
    UIButton *m_errorInfoBar;
    _Bool m_hasClickSendButton;
    _Bool _isChangePageBySelected;
    unsigned int _startPageIndex;
    id <MMImagePickerControlCenter> controlCenter;
    id <MMImagePreviewBrowserControllerDelegate> m_delegate;
    EditImageIntialView *_editImageInitialView;
    EditVideoLogicItem *editVideoLogicItem;
    id <MMImagePreviewBrowserControllerDataSource> _m_dataSource;
    MMAsset *__editAsset;
    FavClickStreamHelper *_favClickStreamHelper;
}

- (void).cxx_destruct;
- (void)OnCancel:(id)arg1;
- (void)OnClickBackBarButton:(id)arg1;
- (void)OnClickDoneBarButton;
- (void)OnClickEditImageBackBarButton;
- (void)OnClickEditImageDoneBarButton;
- (void)OnCrop:(id)arg1;
- (void)OnSelectedButtonDone;
- (void)OnSend:(id)arg1;
@property(copy, nonatomic) MMAsset *_editAsset; // @synthesize _editAsset=__editAsset;
@property(retain, nonatomic) EditImageIntialView *_editImageInitialView; // @synthesize _editImageInitialView;
- (void)cancelSelected;
- (void)changeToPageWithAssetInfo:(id)arg1;
@property(nonatomic) __weak id <MMImagePickerControlCenter> controlCenter; // @synthesize controlCenter;
- (_Bool)currentAssetIsVideo;
- (id)currentViewController;
- (void)didReceiveMemoryWarning;
@property(retain, nonatomic) EditVideoLogicItem *editVideoLogicItem; // @synthesize editVideoLogicItem;
@property(retain, nonatomic) FavClickStreamHelper *favClickStreamHelper; // @synthesize favClickStreamHelper=_favClickStreamHelper;
- (void)getDisplayImage:(CDUnknownBlockType)arg1;
- (void)getOriginalImage:(CDUnknownBlockType)arg1;
- (void)hideVCAnimation;
- (_Bool)hidesStatusBar;
- (id)imageAtPage:(unsigned int)arg1;
- (unsigned long long)imagePickerSceneToEditImageEnterScene;
- (id)init;
- (void)initBackBarButton;
- (void)initBackgroundView;
- (void)initBottomBar;
- (void)initDoneBarbutton;
- (void)initOriginImageButton;
- (void)initSelectCheckButton;
- (void)initView;
@property(nonatomic) _Bool isChangePageBySelected; // @synthesize isChangePageBySelected=_isChangePageBySelected;
@property(nonatomic) __weak id <MMImagePreviewBrowserControllerDataSource> m_dataSource; // @synthesize m_dataSource=_m_dataSource;
@property(nonatomic) __weak id <MMImagePreviewBrowserControllerDelegate> m_delegate; // @synthesize m_delegate;
@property(nonatomic) _Bool m_hasClickSendButton; // @synthesize m_hasClickSendButton;
- (id)mmNavigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)multiImageScrollViewWillBeginDragging;
- (void)onAssetBrowserViewLoadFinished:(id)arg1;
- (void)onAssetBrowserViewPlayingStateChanged:(id)arg1 isPlaying:(_Bool)arg2;
- (void)onAssetBrowserViewSingleTap:(id)arg1;
- (void)onAssetSelectedCollectionViewClickAtIndex:(unsigned long long)arg1;
- (void)onAssetSelectedCollectionViewMoveAssetInfo:(id)arg1 oldIndex:(unsigned long long)arg2;
- (void)onChangePage;
- (void)onClickEditVideoBackBarButton;
- (void)onClickEditVideoDoneBarButton;
- (void)onEditDoneInChatAlbum;
- (void)onEditDoneInTimelineAlbum;
- (void)onEditFinish;
- (void)onEditImage:(id)arg1;
- (void)onEditImage:(int)arg1 withEditEntrance:(unsigned int)arg2;
- (void)onEditVideo:(id)arg1;
- (void)onEditVideo:(int)arg1 withEditEntrance:(unsigned long long)arg2;
- (void)onFullScreenItemDragBegin;
- (void)onFullScreenItemDragEnd;
- (void)onFullScreenItemDragToClose;
- (void)onOriginImageCheck:(id)arg1;
- (void)onSingleTap:(id)arg1;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (void)prepareSend;
- (void)sendSelectedImage;
- (void)setBottomAndTopBarHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setBottomAndTopBarHiddenWithAnimation:(_Bool)arg1;
- (void)setBottomAndTopBarHiddenWithAnimation:(_Bool)arg1;
@property(nonatomic) unsigned int startPageIndex; // @synthesize startPageIndex=_startPageIndex;
- (void)showErrorInfoBarWithInfo:(id)arg1;
- (void)sightLocalVideoProcessingViewController:(id)arg1 didFinishEditingWithSightDraft:(id)arg2;
- (void)updateBottomBarWithAssetInfo:(id)arg1 stateInfo:(id)arg2;
- (void)updateEditButtonEnableWithAssetInfo:(id)arg1;
- (void)updateOriginSizeLabel;
- (void)updateSelectCheckButtonWithIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)updateSelectedButtonWithAssetInfo:(id)arg1;
- (id)viewAtPage:(unsigned int)arg1 frame:(struct CGRect)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidTransitionToNewSize;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

