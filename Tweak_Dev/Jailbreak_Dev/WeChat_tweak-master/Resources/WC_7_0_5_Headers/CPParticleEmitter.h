//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"

@class GLKTextureInfo;

@interface CPParticleEmitter : NSObject <NSCopying>
{
    int particleIndex;
    CDStruct_b8b6eb9d *particles;
    struct {
        CDStruct_8e5b4df2 _field1;
        CDStruct_8e5b4df2 _field2;
        CDStruct_8e5b4df2 _field3;
        CDStruct_8e5b4df2 _field4;
    } *quads;
    unsigned short *indices;
    float scaleParticle;
    float audioColorDelta;
    float rotateParticle;
    _Bool _opacityModifyRGB;
    _Bool _active;
    int _emitterType;
    float _angle;
    float _angleVariance;
    float _speed;
    float _speedVariance;
    float _radialAcceleration;
    float _tangentialAcceleration;
    float _radialAccelVariance;
    float _tangentialAccelVariance;
    float _particleLifespan;
    float _particleLifespanVariance;
    float _startParticleSize;
    float _startParticleSizeVariance;
    float _finishParticleSize;
    float _finishParticleSizeVariance;
    unsigned int _maxParticles;
    int _particleCount;
    float _emissionRate;
    float _emitCounter;
    float _elapsedTime;
    float _duration;
    float _rotationStart;
    float _rotationStartVariance;
    float _rotationEnd;
    float _rotationEndVariance;
    int _blendFuncSource;
    int _blendFuncDestination;
    float _maxRadius;
    float _maxRadiusVariance;
    float _radiusSpeed;
    float _minRadius;
    float _minRadiusVariance;
    float _rotatePerSecond;
    float _rotatePerSecondVariance;
    float _scalePos;
    float _timeSpeed;
    GLKTextureInfo *_texture;
    union _GLKVector2 _sourcePosition;
    union _GLKVector2 _sourcePositionVariance;
    union _GLKVector2 _gravity;
    float *_particleVertices;
    float *_particleTextureCoordinates;
    float *_particleColors;
    unsigned short *_particleIndices;
    float *_particlePointsVertice;
    float *_particlePointsSize;
    double _startTime;
    union _GLKVector4 _startColor;
    union _GLKVector4 _startColorVariance;
    union _GLKVector4 _finishColor;
    union _GLKVector4 _finishColorVariance;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool active; // @synthesize active=_active;
- (int)activeParticleCount;
- (_Bool)addParticle;
@property(nonatomic) float angle; // @synthesize angle=_angle;
@property(nonatomic) float angleVariance; // @synthesize angleVariance=_angleVariance;
@property(nonatomic) int blendFuncDestination; // @synthesize blendFuncDestination=_blendFuncDestination;
@property(nonatomic) int blendFuncSource; // @synthesize blendFuncSource=_blendFuncSource;
- (void)changeParticleColor:(float)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
@property(nonatomic) float duration; // @synthesize duration=_duration;
@property(nonatomic) float elapsedTime; // @synthesize elapsedTime=_elapsedTime;
@property(nonatomic) float emissionRate; // @synthesize emissionRate=_emissionRate;
@property(nonatomic) float emitCounter; // @synthesize emitCounter=_emitCounter;
@property(nonatomic) int emitterType; // @synthesize emitterType=_emitterType;
@property(nonatomic) union _GLKVector4 finishColor; // @synthesize finishColor=_finishColor;
@property(nonatomic) union _GLKVector4 finishColorVariance; // @synthesize finishColorVariance=_finishColorVariance;
@property(nonatomic) float finishParticleSize; // @synthesize finishParticleSize=_finishParticleSize;
@property(nonatomic) float finishParticleSizeVariance; // @synthesize finishParticleSizeVariance=_finishParticleSizeVariance;
@property(nonatomic) union _GLKVector2 gravity; // @synthesize gravity=_gravity;
- (void)initParticle:(CDStruct_b8b6eb9d *)arg1;
- (id)initParticleEmitterWithFile:(id)arg1;
@property(nonatomic) unsigned int maxParticles; // @synthesize maxParticles=_maxParticles;
@property(nonatomic) float maxRadius; // @synthesize maxRadius=_maxRadius;
@property(nonatomic) float maxRadiusVariance; // @synthesize maxRadiusVariance=_maxRadiusVariance;
@property(nonatomic) float minRadius; // @synthesize minRadius=_minRadius;
@property(nonatomic) float minRadiusVariance; // @synthesize minRadiusVariance=_minRadiusVariance;
@property(nonatomic) _Bool opacityModifyRGB; // @synthesize opacityModifyRGB=_opacityModifyRGB;
- (void)parseParticleConfig:(id)arg1;
- (CDStruct_b8b6eb9d)particleAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) int particleBlendFuncDestination;
@property(readonly, nonatomic) int particleBlendFuncSource;
@property(readonly, nonatomic) float *particleColors; // @synthesize particleColors=_particleColors;
@property(nonatomic) int particleCount; // @synthesize particleCount=_particleCount;
@property(readonly, nonatomic) unsigned short *particleIndices; // @synthesize particleIndices=_particleIndices;
@property(nonatomic) float particleLifespan; // @synthesize particleLifespan=_particleLifespan;
@property(nonatomic) float particleLifespanVariance; // @synthesize particleLifespanVariance=_particleLifespanVariance;
@property(readonly, nonatomic) float *particlePointsSize; // @synthesize particlePointsSize=_particlePointsSize;
@property(readonly, nonatomic) float *particlePointsVertice; // @synthesize particlePointsVertice=_particlePointsVertice;
@property(readonly, nonatomic) float *particleTextureCoordinates; // @synthesize particleTextureCoordinates=_particleTextureCoordinates;
@property(readonly, nonatomic) float *particleVertices; // @synthesize particleVertices=_particleVertices;
@property(nonatomic) float radialAccelVariance; // @synthesize radialAccelVariance=_radialAccelVariance;
@property(nonatomic) float radialAcceleration; // @synthesize radialAcceleration=_radialAcceleration;
@property(nonatomic) float radiusSpeed; // @synthesize radiusSpeed=_radiusSpeed;
- (void)reset;
- (void)rotateParticle:(float)arg1;
@property(nonatomic) float rotatePerSecond; // @synthesize rotatePerSecond=_rotatePerSecond;
@property(nonatomic) float rotatePerSecondVariance; // @synthesize rotatePerSecondVariance=_rotatePerSecondVariance;
@property(nonatomic) float rotationEnd; // @synthesize rotationEnd=_rotationEnd;
@property(nonatomic) float rotationEndVariance; // @synthesize rotationEndVariance=_rotationEndVariance;
@property(nonatomic) float rotationStart; // @synthesize rotationStart=_rotationStart;
@property(nonatomic) float rotationStartVariance; // @synthesize rotationStartVariance=_rotationStartVariance;
- (void)scaleParticle:(float)arg1;
@property(nonatomic) float scalePos; // @synthesize scalePos=_scalePos;
@property(nonatomic) union _GLKVector2 sourcePosition; // @synthesize sourcePosition=_sourcePosition;
@property(nonatomic) union _GLKVector2 sourcePositionVariance; // @synthesize sourcePositionVariance=_sourcePositionVariance;
@property(nonatomic) float speed; // @synthesize speed=_speed;
@property(nonatomic) float speedVariance; // @synthesize speedVariance=_speedVariance;
@property(nonatomic) union _GLKVector4 startColor; // @synthesize startColor=_startColor;
@property(nonatomic) union _GLKVector4 startColorVariance; // @synthesize startColorVariance=_startColorVariance;
@property(nonatomic) float startParticleSize; // @synthesize startParticleSize=_startParticleSize;
@property(nonatomic) float startParticleSizeVariance; // @synthesize startParticleSizeVariance=_startParticleSizeVariance;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) float tangentialAccelVariance; // @synthesize tangentialAccelVariance=_tangentialAccelVariance;
@property(nonatomic) float tangentialAcceleration; // @synthesize tangentialAcceleration=_tangentialAcceleration;
@property(retain, nonatomic) GLKTextureInfo *texture; // @synthesize texture=_texture;
@property(nonatomic) float timeSpeed; // @synthesize timeSpeed=_timeSpeed;
- (void)setupArrays;
- (void)stopParticleEmitter;
- (_Bool)totalFinished;
- (_Bool)u_opacityModifyRGB;
- (void)updateWithCurrentTime:(double)arg1;
- (void)updateWithDelta:(float)arg1;

@end

